// <auto-generated />
using System;
using MeuPonto_Blazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeuPonto_Blazor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeuPonto_Blazor.Atividade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PontoCodigo")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Tempo")
                        .HasColumnType("time");

                    b.HasKey("Codigo");

                    b.HasIndex("PontoCodigo");

                    b.ToTable("Atividade");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Empresa", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Codigo");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Funcionario", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("EmpresaCodigo");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Marcacao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Fim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("time");

                    b.Property<int?>("PontoCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("PontoCodigo");

                    b.ToTable("Marcacao");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Periodo", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Referencia")
                        .HasColumnType("datetime2");

                    b.HasKey("Codigo");

                    b.HasIndex("EmpresaCodigo");

                    b.ToTable("Periodo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Ponto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("FuncionarioCodigo");

                    b.ToTable("Ponto");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Atividade", b =>
                {
                    b.HasOne("MeuPonto_Blazor.Ponto", null)
                        .WithMany("Atividades")
                        .HasForeignKey("PontoCodigo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Funcionario", b =>
                {
                    b.HasOne("MeuPonto_Blazor.Empresa", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("EmpresaCodigo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Marcacao", b =>
                {
                    b.HasOne("MeuPonto_Blazor.Ponto", null)
                        .WithMany("Marcacoes")
                        .HasForeignKey("PontoCodigo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Periodo", b =>
                {
                    b.HasOne("MeuPonto_Blazor.Empresa", null)
                        .WithMany("Periodos")
                        .HasForeignKey("EmpresaCodigo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Ponto", b =>
                {
                    b.HasOne("MeuPonto_Blazor.Funcionario", null)
                        .WithMany("Pontos")
                        .HasForeignKey("FuncionarioCodigo");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Empresa", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Periodos");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Funcionario", b =>
                {
                    b.Navigation("Pontos");
                });

            modelBuilder.Entity("MeuPonto_Blazor.Ponto", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Marcacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
